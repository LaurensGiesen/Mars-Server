openapi: 3.0.0
info:
  title: 'Mars Concept Title'
  description: 'Please complete this spec as seen in the module Information Module'
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-14
    description: 'Public web api'

components:
  schemas:
    location:
      type: object
      properties:
        longitude :
          type: number
          example: 1.123456789
        latitude :
          type: number
          example: 1.987654321
        cropName:
          type: string
          example: Apple
        cropType;:
          type: string
          example: fruit
        ratio:
          type: number
          example: 9
          minimum: 0
          maximum: 10


    ProductType:
      type: object
      properties:
        productId:
          type: number
          example: 1
        ownerId:
          type: number
          example: 1
        productType:
          type: "string"
          enum: ["seed", "plant"]
          default: "plant"
          example: "plant"

    User:
      type: object
      properties:
        firstname:
          type: string
          example: "John"
        lastname:
          type: string
          example: "Doe"
        email:
          type: string
          example: "John.Doe@gmail.com"
        birthDay:
          type: string
          example: "01-01-2000"
        address:
          type: string
          example: "The Moon"
        number:
          type: number
          example: 1234567890
        dome:
          type: string
          example: "1337"
        crop1:
          type: string
          example: "Apple"
        crop2:
          type: string
          example: "Carrot"
        crop3:
          type: string
          example: "Raspberry Pi"

    Product:
      type: object
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Alice"
        price:
          type: "number"
          example: 5
        ownerId:
          type: "number"
          example: 1
        date:
          type: "string"
          example: "01-01-2000"
        amount:
          type: "integer"
          example: 10
        image:
          type: "string"
          example: "picture.png"
        type:
          type: "string"
          enum: ["seed", "plant"]
          default: "plant"
          example: "plant"



paths:
  /api/message:
    get:
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/register:
    post:
      summary: create new user
      operationId: createUser
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/User"
      responses:
        '200':
          description: Ok
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error

  /api/getPlants:
    get:
      summary: Get all plants
      operationId: getPlants
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error

  /api/getSeeds:
    get:
      summary: Get all Seeds
      operationId: getSeeds
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error

  /api/getCrop/{name}:
    get:
      summary: Get all Seeds by part of name
      operationId: getCropsWhereNameIsLike
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error

  /api/addProduct:
    post:
      summary: Add new product
      operationId: addProduct
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: '#/components/schemas/Product'

      responses:
        '200':
          description: OK
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error

  /api/removeProduct:
    post:
      summary: Remove a product from your basket
      operationId: removeProduct
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/ProductType"

      responses:
        '200':
          description: OK
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error


  /api/addProductToFavorite:
    post:
      summary: Add a product to your favorits
      operationId: addProductToFavorite
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/ProductType"


      responses:
        '200':
          description: OK
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/addProductToBasket:
    post:
      summary: Add a product to your basket
      operationId: addProductToBasket
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/ProductType"


      responses:
        '200':
          description: OK
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/getFavorites/{userId}:
    get:
      summary: Get The favorites Of A User
      operationId: getFavorites
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error
      
      
  /api/getBasket/{userId}:
    get:
      summary: Get The B Of A User
      operationId: getBasket
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/removeProductFromFavorite:
    post:
      summary: Remove a product from your favorits
      operationId: removeProductFromFavorite
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/ProductType"

      responses:
        '200':
          description: OK
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/removeProductFromBasket:
    post:
      summary: Remove a product from your basket
      operationId: removeProductFromBasket
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/ProductType"

      responses:
        '200':
          description: OK
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/getLocations:
    get:
      summary: Get all locations
      operationId: getLocations
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/location"
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/getLocations/{product_id}:
    get:
      summary: Get all locations for specific crop id
      operationId: getLocationByCropId
      parameters:
        - name: "product_id"
          in: "path"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/location"
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/getCrop/{longitude}/{latitude}:
    get:
      summary: Get all crop for specific location
      operationId: getCropByLocation
      parameters:
        - name: "longitude"
          in: "path"
          required: true
          schema:
            type: number
        - name: "latitude"
          in: "path"
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/location"
        '401':
          description: Invalid Authentication
        '500':
          description: Internal Server Error

  /api/updateUser/{user_id}:
    post:
      summary: Update user info
      operationId: updateUser
      parameters:
        - name: "user_id"
          in: "path"
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              items:
                $ref: "#/components/schemas/User"
      responses:
        '200':
          description: Ok
        '401':
          description: Absent or mallformed authentication
        '500':
          description: Internal Server Error